buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
}

plugins {
    id "signing"
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
}

group = 'org.asciidoctor'
description = 'A Groovy DSL for writing extensions for AsciidoctorJ'

ext {
    buildDateTime = new Date()
    (buildDateOnly, buildTimeOnly) = new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss.SSSZ').format(buildDateTime).split(' ')
    projectArtifactId = 'asciidoctorj-groovy-dsl'
    publicationName = 'asciidoctorjGroovyDsl'
    groovyVer = '3.0.17'
}

apply plugin: 'groovy'
apply plugin: 'codenarc'
apply from: 'gradle/publish.gradle'
apply from: 'gradle/signing.gradle'


repositories {
    mavenCentral()
}

dependencies {
    implementation "org.codehaus.groovy:groovy:${groovyVer}"
    implementation 'org.asciidoctor:asciidoctorj:3.0.0-alpha.1'

    testImplementation('org.spockframework:spock-core:2.3-groovy-3.0') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'cglib:cglib-nodep:3.3.0'
    testImplementation 'org.jsoup:jsoup:1.16.1'
}

codenarc {
    configFile = file('config/codenarc/codenarc.groovy')
    // run codenarc on production sources only
    sourceSets = [project.sourceSets.main]
}

java {
    withJavadocJar()
    withSourcesJar()
}

compileJava {
    options.release = 11
}

nexusPublishing {
    repositories {
        sonatype {
            if (project.hasProperty("sonatypeUsername")) {
                username = project.sonatypeUsername
            }
            if (project.hasProperty("sonatypePassword")) {
                password = project.sonatypePassword
            }
            repositoryDescription = "Release ${project.group} ${project.version}"
        }
    }
    clientTimeout = Duration.ofMinutes(5)
}
